#ifndef PLATFORM_H
#define PLATFORM_H


typedef enum Error_e {
  ERROR_UNEXPECTED        = -128, // -128 ~> 0x80 = 0b10000000
  
  ERROR_INVALID_ID        = 3,
  ERROR_INVALID_OPERATION = 2,
  ERROR_INVALID_ARGUMENT  = 1,
  ERROR_NONE              = 0
} Error_t;

#define ERROR_UNEXPECTED(ERROR_CODE) ((-2147483648) + (ERROR_CODE)) 


typedef enum Gpio_Id_e {
  GPIO_ID_PA0  = 0x00, GPIO_ID_BUTTON_WAKE_UP = GPIO_ID_PA0,
  GPIO_ID_PA1  = 0x01,
  GPIO_ID_PA2  = 0x02,
  GPIO_ID_PA3  = 0x03,
  GPIO_ID_PA4  = 0x04,
  GPIO_ID_PA5  = 0x05,
  GPIO_ID_PA6  = 0x06,
  GPIO_ID_PA7  = 0x07,
  GPIO_ID_PA8  = 0x08,
  GPIO_ID_PA9  = 0x09,
  GPIO_ID_PA10 = 0x0A,
  GPIO_ID_PA11 = 0x0B,
  GPIO_ID_PA12 = 0x0C,
  GPIO_ID_PA13 = 0x0D,
  GPIO_ID_PA14 = 0x0E,
  GPIO_ID_PA15 = 0x0F,
  GPIO_ID_PB0  = 0x10,
  GPIO_ID_PB1  = 0x11,
  GPIO_ID_PB2  = 0x12,
  GPIO_ID_PB3  = 0x13,
  GPIO_ID_PB4  = 0x14,
  GPIO_ID_PB5  = 0x15,
  GPIO_ID_PB6  = 0x16,
  GPIO_ID_PB7  = 0x17,
  GPIO_ID_PB8  = 0x18,
  GPIO_ID_PB9  = 0x19,
  GPIO_ID_PB10 = 0x1A,
  GPIO_ID_PB11 = 0x1B,
  GPIO_ID_PB12 = 0x1C,
  GPIO_ID_PB13 = 0x1D,
  GPIO_ID_PB14 = 0x1E,
  GPIO_ID_PB15 = 0x1F,
  GPIO_ID_PC0  = 0x20, GPIO_ID_LED3 = GPIO_ID_PC0,
  GPIO_ID_PC1  = 0x21, GPIO_ID_LED4 = GPIO_ID_PC1,
  GPIO_ID_PC2  = 0x22, GPIO_ID_LED5 = GPIO_ID_PC2,
  GPIO_ID_PC3  = 0x23,
  GPIO_ID_PC4  = 0x24, GPIO_ID_POTENTIOMETER = GPIO_ID_PC4,
  GPIO_ID_PC5  = 0x25,
  GPIO_ID_PC6  = 0x26, GPIO_ID_LED6R = GPIO_ID_PC6,
  GPIO_ID_PC7  = 0x27, GPIO_ID_LED6G = GPIO_ID_PC7,
  GPIO_ID_PC8  = 0x28, GPIO_ID_LED6B = GPIO_ID_PC8, 
  GPIO_ID_PC9  = 0x29,
  GPIO_ID_PC10 = 0x2A, GPIO_ID_UART_X3_TX = GPIO_ID_PC10,
  GPIO_ID_PC11 = 0x2B, GPIO_ID_UART_X3_RX = GPIO_ID_PC11,
  GPIO_ID_PC12 = 0x2C,
  GPIO_ID_PC13 = 0x2D,
  GPIO_ID_PC14 = 0x2E,
  GPIO_ID_PC15 = 0x2F,
  GPIO_ID_PD0  = 0x30, GPIO_ID_BUTTON_USER0 = GPIO_ID_PD0,
  GPIO_ID_PD1  = 0x31, GPIO_ID_BUTTON_USER1 = GPIO_ID_PD1,
  GPIO_ID_PD2  = 0x32,
  GPIO_ID_PD3  = 0x33,
  GPIO_ID_PD4  = 0x34,
  GPIO_ID_PD5  = 0x35,
  GPIO_ID_PD6  = 0x36,
  GPIO_ID_PD7  = 0x37,
  GPIO_ID_PD8  = 0x38, GPIO_ID_UART_VCOM_TX = GPIO_ID_PD8,
  GPIO_ID_PD9  = 0x39, GPIO_ID_UART_VCOM_RX = GPIO_ID_PD9,
  GPIO_ID_PD10 = 0x3A,
  GPIO_ID_PD11 = 0x3B,
  GPIO_ID_PD12 = 0x3C,
  GPIO_ID_PD13 = 0x3D,
  GPIO_ID_PD14 = 0x3E,
  GPIO_ID_PD15 = 0x3F,
  GPIO_ID_PE0  = 0x40, GPIO_ID_TFT_D0 = GPIO_ID_PE0,
  GPIO_ID_PE1  = 0x41, GPIO_ID_TFT_D1 = GPIO_ID_PE1,
  GPIO_ID_PE2  = 0x42, GPIO_ID_TFT_D2 = GPIO_ID_PE2,
  GPIO_ID_PE3  = 0x43, GPIO_ID_TFT_D3 = GPIO_ID_PE3,
  GPIO_ID_PE4  = 0x44, GPIO_ID_TFT_D4 = GPIO_ID_PE4,
  GPIO_ID_PE5  = 0x45, GPIO_ID_TFT_D5 = GPIO_ID_PE5,
  GPIO_ID_PE6  = 0x46, GPIO_ID_TFT_D6 = GPIO_ID_PE6,
  GPIO_ID_PE7  = 0x47, GPIO_ID_TFT_D7 = GPIO_ID_PE7,
  GPIO_ID_PE8  = 0x48, GPIO_ID_TFT_CS = GPIO_ID_PE8,
  GPIO_ID_PE9  = 0x49, GPIO_ID_TFT_DC = GPIO_ID_PE9,
  GPIO_ID_PE10 = 0x4A, GPIO_ID_TFT_WR = GPIO_ID_PE10,
  GPIO_ID_PE11 = 0x4B, GPIO_ID_TFT_RD = GPIO_ID_PE11,
  GPIO_ID_PE12 = 0x4C,
  GPIO_ID_PE13 = 0x4D,
  GPIO_ID_PE14 = 0x4E,
  GPIO_ID_PE15 = 0x4F,
  GPIO_ID_PF0  = 0x50,
  GPIO_ID_PF1  = 0x51,
  GPIO_ID_PF2  = 0x52,
  GPIO_ID_PF3  = 0x53,
  GPIO_ID_PF4  = 0x54,
  GPIO_ID_PF5  = 0x55,
  GPIO_ID_PF6  = 0x56,
  GPIO_ID_PF7  = 0x57,
  GPIO_ID_PF8  = 0x58,
  GPIO_ID_PF9  = 0x59,
  GPIO_ID_PF10 = 0x5A,
  GPIO_ID_PF11 = 0x5B,
  GPIO_ID_PF12 = 0x5C,
  GPIO_ID_PF13 = 0x5D,
  GPIO_ID_PF14 = 0x5E,
  GPIO_ID_PF15 = 0x5F
} Gpio_Id_t;


typedef enum Led_Id_e {
  LED_ID_LED3  = 0,
  LED_ID_LED4  = 1,
  LED_ID_LED5  = 2,
  LED_ID_LED6R = 3,
  LED_ID_LED6G = 4,
  LED_ID_LED6B = 5
} Led_Id_t;


typedef enum Key_Id_e {
  KEY_ID_WAKE_UP  = 0,
  KEY_ID_USER0    = 1,
  KEY_ID_USER1    = 2
} Key_Id_t;

#define KEY_EVENT_BUFFER_COUNT (8)

typedef enum Adc_Id_e {
  ADC_ID_CHANNEL0  =  0, ADC_ID_PA0  = ADC_ID_CHANNEL0,
  ADC_ID_CHANNEL1  =  1, ADC_ID_PA1  = ADC_ID_CHANNEL1,
  ADC_ID_CHANNEL2  =  2, ADC_ID_PA2  = ADC_ID_CHANNEL2,
  ADC_ID_CHANNEL3  =  3, ADC_ID_PA3  = ADC_ID_CHANNEL3,
  ADC_ID_CHANNEL4  =  4, ADC_ID_PA4  = ADC_ID_CHANNEL4,
  ADC_ID_CHANNEL5  =  5, ADC_ID_PA5  = ADC_ID_CHANNEL5,
  ADC_ID_CHANNEL6  =  6, ADC_ID_PA6  = ADC_ID_CHANNEL6,
  ADC_ID_CHANNEL7  =  7, ADC_ID_PA7  = ADC_ID_CHANNEL7,
  ADC_ID_CHANNEL8  =  8, ADC_ID_PB0  = ADC_ID_CHANNEL8,
  ADC_ID_CHANNEL9  =  9, ADC_ID_PB1  = ADC_ID_CHANNEL9,
  ADC_ID_CHANNEL10 = 10, ADC_ID_PC0  = ADC_ID_CHANNEL10,
  ADC_ID_CHANNEL11 = 11, ADC_ID_PC1  = ADC_ID_CHANNEL11,
  ADC_ID_CHANNEL12 = 12, ADC_ID_PC2  = ADC_ID_CHANNEL12,
  ADC_ID_CHANNEL13 = 13, ADC_ID_PC3  = ADC_ID_CHANNEL13,
  ADC_ID_CHANNEL14 = 14, ADC_ID_PC4  = ADC_ID_CHANNEL14, ADC_ID_POTENTIOMETER  = ADC_ID_PC4,
  ADC_ID_CHANNEL15 = 15, ADC_ID_PC5  = ADC_ID_CHANNEL15,
  ADC_ID_CHANNEL16 = 16, ADC_ID_TEMPERATURE = ADC_ID_CHANNEL16, // Temperature sensor
  ADC_ID_CHANNEL17 = 17, ADC_ID_VREFINT = ADC_ID_CHANNEL17, // Internal voltage reference Vrefint
  ADC_ID_CHANNEL18 = 18, ADC_ID_VBAT = ADC_ID_CHANNEL18, // VBAT battery voltage
} Adc_Id_t;


#endif // PLATFORM_H
