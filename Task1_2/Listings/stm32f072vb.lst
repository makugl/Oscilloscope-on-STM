


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ; File:      STM32F072VB.s
    3 00000000         ; Target:    STM32F072VB
    4 00000000         ; Toolchain: MDK-Lite 5.24.1 / armasm.exe V5.06 update 5
                        (build 528)
    5 00000000         ;*******************************************************
                       ***********************
    6 00000000         ; [RM0091] "RM0091 Reference manual",
    7 00000000         ; January 2017, DocID018940 Rev 9, www.st.com
    8 00000000         ;
    9 00000000         ; [PM0215] "PM0215 Programming manual"
   10 00000000         ; April 2012, Doc ID 022979 Rev 1, www.st.com
   11 00000000         ;
   12 00000000         ; [armasm] "ARMÂ® Compiler armasm User Guide"
   13 00000000         ; 2010-2016, DUI0473M, ARM Limited
   14 00000000         ;*******************************************************
                       ***********************
   15 00000000         ; The boot mode configuration is latched on the 4th risi
                       ng edge of SYSCLK after
   16 00000000         ; a reset. After this startup delay has elapsed, the CPU
                        fetches the
   17 00000000         ; top-of-stack value from address 0x00000000, then start
                       s code execution from
   18 00000000         ; the boot memory at 0x00000004. The main Flash memory i
                       s aliased in the boot
   19 00000000         ; memory space (0x00000000), but still accessible from i
                       ts original memory
   20 00000000         ; space (0x08000000). In other words, the Flash memory c
                       ontents can be accessed
   21 00000000         ; starting from address 0x00000000 or 0x08000000.
   22 00000000         ; [RM0091], 2.5 Boot configuration
   23 00000000         ;*******************************************************
                       ***********************
   24 00000000         
   25 00000000         
   26 00000000         ;*******************************************************
                       ***********************
   27 00000000         ; Exports & Imports
   28 00000000         ;*******************************************************
                       ***********************
   29 00000000         
   30 00000000                 IMPORT           __main [CODE]
   31 00000000                 EXPORT           Reset_Handler
   32 00000000                 EXPORT           __Vectors
   33 00000000                 EXPORT           __initial_sp
   34 00000000         
   35 00000000         
   36 00000000         ;*******************************************************
                       ***********************
   37 00000000         ; Data Area: Vector Table
   38 00000000         ;*******************************************************
                       ***********************
   39 00000000         ; The vector table contains the reset value of the stack
                        pointer, and the start
   40 00000000         ; addresses, also
   41 00000000         ; called exception vectors, for all exception handlers.
   42 00000000         ; On system reset, the vector table is fixed at address 
                       0x00000000.



ARM Macro Assembler    Page 2 


   43 00000000         ; The least-significant bit of each vector must be 1, in
                       dicating that the
   44 00000000         ; exception handler is Thumb code.
   45 00000000         ; [PM0215], 2.3.4 Vector table
   46 00000000         ;
   47 00000000         ; [RM0091] 11.1.3 Interrupt and exception vectors
   48 00000000         ;
   49 00000000         ; The STM32F072VB only supports Thumb(-2) instructions; 
                       therefore this is not
   50 00000000         ; a problem. To be sure we add the THUMB instruction to 
                       the implementation of
   51 00000000         ; exception handlers.
   52 00000000         ;*******************************************************
                       ***********************
   53 00000000         
   54 00000000                 AREA             VectorTable, DATA, READONLY, AL
IGN=2
   55 00000000         __Vectors
   56 00000000 00000000        DCD              __initial_sp ; Top of Stack
   57 00000004 00000000        DCD              Reset_Handler ; Reset
   58 00000008 00000000        DCD              DefaultHandler ; NMI
   59 0000000C 00000000        DCD              DefaultHandler ; HardFault
   60 00000010 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            7*4         ; Reserved (7x)
   61 0000002C 00000000        DCD              DefaultHandler ; SVCall
   62 00000030 00 00 00 
              00 00 00 
              00 00            SPACE            2*4         ; Reserved (2x)
   63 00000038 00000000        DCD              DefaultHandler ; PendSV
   64 0000003C 00000000        DCD              DefaultHandler ; SysTick
   65 00000040 00000000        DCD              DefaultHandler ; WWDG
   66 00000044 00000000        DCD              DefaultHandler ; PVD_VDDIO2
   67 00000048 00000000        DCD              DefaultHandler ; RTC
   68 0000004C 00000000        DCD              DefaultHandler ; FLASH
   69 00000050 00000000        DCD              DefaultHandler ; RCC_CRS
   70 00000054 00000000        DCD              DefaultHandler ; EXTI0_1
   71 00000058 00000000        DCD              DefaultHandler ; EXTI2_3
   72 0000005C 00000000        DCD              DefaultHandler ; EXTI4_15
   73 00000060 00000000        DCD              DefaultHandler ; TSC
   74 00000064 00000000        DCD              DefaultHandler ; DMA_CH1
   75 00000068 00000000        DCD              DefaultHandler ; DMA_CH2_3, DMA
                                                            2_CH1_2
   76 0000006C 00000000        DCD              DefaultHandler ; DMA_CH4_5_6_7,
                                                             DMA2_CH3_4_5
   77 00000070 00000000        DCD              DefaultHandler ; ADC_COMP
   78 00000074 00000000        DCD              DefaultHandler ; TIM1_BRK_UP_TR
                                                            G_COM
   79 00000078 00000000        DCD              DefaultHandler ; TIM1_CC
   80 0000007C 00000000        DCD              DefaultHandler ; TIM2
   81 00000080 00000000        DCD              DefaultHandler ; TIM3
   82 00000084 00000000        DCD              DefaultHandler ; TIM6_DAC



ARM Macro Assembler    Page 3 


   83 00000088 00000000        DCD              DefaultHandler ; TIM7
   84 0000008C 00000000        DCD              DefaultHandler ; TIM14
   85 00000090 00000000        DCD              DefaultHandler ; TIM15
   86 00000094 00000000        DCD              DefaultHandler ; TIM16
   87 00000098 00000000        DCD              DefaultHandler ; TIM17
   88 0000009C 00000000        DCD              DefaultHandler ; I2C1
   89 000000A0 00000000        DCD              DefaultHandler ; I2C2
   90 000000A4 00000000        DCD              DefaultHandler ; SPI1
   91 000000A8 00000000        DCD              DefaultHandler ; SPI2
   92 000000AC 00000000        DCD              DefaultHandler ; USART1
   93 000000B0 00000000        DCD              DefaultHandler ; USART2
   94 000000B4 00000000        DCD              DefaultHandler 
                                                            ; USART3_4_5_6_7_8
   95 000000B8 00000000        DCD              DefaultHandler ; CEC_CAN
   96 000000BC 00000000        DCD              DefaultHandler ; USB
   97 000000C0         
   98 000000C0         
   99 000000C0         ;*******************************************************
                       ***********************
  100 000000C0         ; Data Area: Stack
  101 000000C0         ;*******************************************************
                       ***********************
  102 000000C0         ; The processor uses a full descending stack. This means
                        the stack pointer
  103 000000C0         ; indicates the last stacked item on the stack memory. W
                       hen the processor
  104 000000C0         ; pushes a new item onto the stack, it decrements the st
                       ack pointer and then
  105 000000C0         ; writes the item to the new memory location.
  106 000000C0         ; [PM0215], 2.1.2 Stacks
  107 000000C0         ;*******************************************************
                       ***********************
  108 000000C0         
  109 000000C0                 AREA             Stack, NOINIT, READWRITE, ALIGN
=3
  110 00000000         
  111 00000000                 SPACE            4096        ; Stack size in byt
                                                            es (Total SRAM: 16 
                                                            kB)
  112 00001000         __initial_sp
  113 00001000         
  114 00001000         
  115 00001000         ;*******************************************************
                       ***********************
  116 00001000         ; Code Area: Exception Handlers
  117 00001000         ;*******************************************************
                       ***********************
  118 00001000         
  119 00001000                 AREA             ExceptionHandlers, CODE, READON
LY
  120 00000000         
  121 00000000         
  122 00000000         ;-------------------------------------------------------
                       -----------------------
  123 00000000         ; Reset exception handler implementation.
  124 00000000         ;-------------------------------------------------------
                       -----------------------
  125 00000000         
  126 00000000         Reset_Handler



ARM Macro Assembler    Page 4 


                               PROC
  127 00000000         
  128 00000000         ; The ENTRY directive declares an entry point to a progr
                       am.
  129 00000000         ; If the program contains multiple entry points, then yo
                       u
  130 00000000         ; must select one of them. You do this by exporting the
  131 00000000         ; symbol for the ENTRY directive that you want to use as
                        the
  132 00000000         ; entry point, then using the armlink --entry option to
  133 00000000         ; select the exported symbol.
  134 00000000                 ENTRY
  135 00000000         
  136 00000000         ; Interpret subsequent instructions as Thumb instruction
                       s.
  137 00000000                 THUMB
  138 00000000         
  139 00000000         ; Branch to the imported address SystemStart
  140 00000000         ;
  141 00000000         ; The assembler converts an LDR Rd,=label
  142 00000000         ; pseudo-instruction by:
  143 00000000         ; * Placing the address of label in a literal pool (a po
                       rtion
  144 00000000         ;   of memory embedded in the code to hold constant valu
                       es).
  145 00000000         ; * Generating a PC-relative LDR instruction that reads 
                       the
  146 00000000         ;   address from the literal pool
  147 00000000         ; [armasm], 4.11 Load addresses to a register using LDR 
                       Rd, =label
  148 00000000 4800            LDR              R0, =__main
  149 00000002 4700            BX               R0
  150 00000004         
  151 00000004         ; Assemble the current literal pool (contains the value
  152 00000004         ; of SystemStart).
  153 00000004 00000000        LTORG
  154 00000008         
  155 00000008                 ENDP
  156 00000008         
  157 00000008         
  158 00000008         ;-------------------------------------------------------
                       -----------------------
  159 00000008         ; Default exception handler implementation.
  160 00000008         ;-------------------------------------------------------
                       -----------------------
  161 00000008         
  162 00000008         DefaultHandler
                               PROC
  163 00000008         
  164 00000008         ; Interpret subsequent instructions as Thumb instruction
                       s.
  165 00000008                 THUMB
  166 00000008         
  167 00000008         ; Branch to current line; inifinite loop.
  168 00000008 E7FE            B                .
  169 0000000A         
  170 0000000A                 ENDP
  171 0000000A         
  172 0000000A         



ARM Macro Assembler    Page 5 


  173 0000000A         ;*******************************************************
                       ***********************
  174 0000000A         ; End of File
  175 0000000A         ;*******************************************************
                       ***********************
  176 0000000A         
  177 0000000A                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\objects\stm32f072vb.d -o.\objects\stm32f072vb.o -I.\RTE\_Apus_Bo
ard -IC:\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM3
2F0xx\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pred
efine="__UVISION_VERSION SETA 526" --predefine="STM32F072xB SETA 1" --list=.\li
stings\stm32f072vb.lst STM32F072VB.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

VectorTable 00000000

Symbol: VectorTable
   Definitions
      At line 54 in file STM32F072VB.s
   Uses
      None
Comment: VectorTable unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 55 in file STM32F072VB.s
   Uses
      At line 32 in file STM32F072VB.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Stack 00000000

Symbol: Stack
   Definitions
      At line 109 in file STM32F072VB.s
   Uses
      None
Comment: Stack unused
__initial_sp 00001000

Symbol: __initial_sp
   Definitions
      At line 112 in file STM32F072VB.s
   Uses
      At line 33 in file STM32F072VB.s
      At line 56 in file STM32F072VB.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DefaultHandler 00000008

Symbol: DefaultHandler
   Definitions
      At line 162 in file STM32F072VB.s
   Uses
      At line 58 in file STM32F072VB.s
      At line 59 in file STM32F072VB.s
      At line 61 in file STM32F072VB.s
      At line 63 in file STM32F072VB.s
      At line 64 in file STM32F072VB.s
      At line 65 in file STM32F072VB.s
      At line 66 in file STM32F072VB.s
      At line 67 in file STM32F072VB.s
      At line 68 in file STM32F072VB.s
      At line 69 in file STM32F072VB.s
      At line 70 in file STM32F072VB.s
      At line 71 in file STM32F072VB.s
      At line 72 in file STM32F072VB.s
      At line 73 in file STM32F072VB.s
      At line 74 in file STM32F072VB.s
      At line 75 in file STM32F072VB.s
      At line 76 in file STM32F072VB.s
      At line 77 in file STM32F072VB.s
      At line 78 in file STM32F072VB.s
      At line 79 in file STM32F072VB.s
      At line 80 in file STM32F072VB.s
      At line 81 in file STM32F072VB.s
      At line 82 in file STM32F072VB.s
      At line 83 in file STM32F072VB.s
      At line 84 in file STM32F072VB.s
      At line 85 in file STM32F072VB.s
      At line 86 in file STM32F072VB.s
      At line 87 in file STM32F072VB.s
      At line 88 in file STM32F072VB.s
      At line 89 in file STM32F072VB.s
      At line 90 in file STM32F072VB.s
      At line 91 in file STM32F072VB.s
      At line 92 in file STM32F072VB.s
      At line 93 in file STM32F072VB.s
      At line 94 in file STM32F072VB.s
      At line 95 in file STM32F072VB.s
      At line 96 in file STM32F072VB.s

ExceptionHandlers 00000000

Symbol: ExceptionHandlers
   Definitions
      At line 119 in file STM32F072VB.s
   Uses
      None
Comment: ExceptionHandlers unused
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 126 in file STM32F072VB.s
   Uses
      At line 31 in file STM32F072VB.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 57 in file STM32F072VB.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 30 in file STM32F072VB.s
   Uses
      At line 148 in file STM32F072VB.s
Comment: __main used once
1 symbol
343 symbols in table
